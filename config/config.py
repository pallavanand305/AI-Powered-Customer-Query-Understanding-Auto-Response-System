import os\nfrom typing import Dict, Any\nfrom pydantic import BaseSettings\n\nclass Settings(BaseSettings):\n    # API Configuration\n    API_HOST: str = \"0.0.0.0\"\n    API_PORT: int = 8000\n    API_WORKERS: int = 4\n    \n    # Database Configuration\n    DATABASE_URL: str = \"sqlite:///queries.db\"\n    REDIS_URL: str = \"redis://localhost:6379\"\n    \n    # ML Configuration\n    MODEL_VERSION: str = \"2.0.0\"\n    CONFIDENCE_THRESHOLD: float = 0.7\n    UNCERTAINTY_THRESHOLD: float = 0.3\n    RETRAIN_THRESHOLD: float = 0.1  # Drift threshold\n    \n    # MLflow Configuration\n    MLFLOW_TRACKING_URI: str = \"http://localhost:5000\"\n    MLFLOW_EXPERIMENT_NAME: str = \"customer-query-system\"\n    \n    # AWS Configuration\n    AWS_REGION: str = \"us-east-1\"\n    AWS_ACCESS_KEY_ID: str = \"\"\n    AWS_SECRET_ACCESS_KEY: str = \"\"\n    S3_BUCKET: str = \"customer-query-models\"\n    \n    # Monitoring Configuration\n    PROMETHEUS_PORT: int = 9090\n    LOG_LEVEL: str = \"INFO\"\n    ENABLE_METRICS: bool = True\n    \n    # Model Configuration\n    TRANSFORMER_MODELS: list = [\n        \"distilbert-base-uncased\",\n        \"roberta-base\"\n    ]\n    \n    # Alert Thresholds\n    ALERT_LOW_CONFIDENCE: float = 0.6\n    ALERT_HIGH_ERROR_RATE: float = 0.1\n    ALERT_HIGH_MEMORY: float = 0.85\n    ALERT_HIGH_CPU: float = 0.9\n    \n    class Config:\n        env_file = \".env\"\n        case_sensitive = True\n\n# Model hyperparameters\nMODEL_CONFIG: Dict[str, Any] = {\n    \"ensemble\": {\n        \"n_estimators\": 100,\n        \"max_depth\": 10,\n        \"random_state\": 42\n    },\n    \"transformer\": {\n        \"max_length\": 512,\n        \"batch_size\": 16,\n        \"learning_rate\": 2e-5,\n        \"num_epochs\": 3\n    },\n    \"llm\": {\n        \"temperature\": 0.7,\n        \"max_tokens\": 150,\n        \"top_p\": 0.9\n    }\n}\n\n# Intent categories and responses\nINTENT_CONFIG = {\n    \"categories\": [\n        \"billing\",\n        \"technical\",\n        \"complaint\",\n        \"general\",\n        \"cancellation\",\n        \"upgrade\"\n    ],\n    \"priority_weights\": {\n        \"complaint\": 0.8,\n        \"technical\": 0.6,\n        \"billing\": 0.4,\n        \"cancellation\": 0.7,\n        \"upgrade\": 0.3,\n        \"general\": 0.2\n    }\n}\n\n# Feature extraction configuration\nFEATURE_CONFIG = {\n    \"text_features\": [\n        \"length\",\n        \"word_count\",\n        \"exclamation_count\",\n        \"question_count\",\n        \"caps_ratio\",\n        \"urgency_keywords\",\n        \"sentiment_keywords\"\n    ],\n    \"urgency_keywords\": [\n        \"urgent\", \"asap\", \"immediately\", \"emergency\",\n        \"critical\", \"now\", \"quickly\", \"fast\"\n    ],\n    \"negative_keywords\": [\n        \"bad\", \"terrible\", \"awful\", \"disappointed\",\n        \"angry\", \"frustrated\", \"horrible\", \"worst\"\n    ],\n    \"positive_keywords\": [\n        \"good\", \"great\", \"excellent\", \"satisfied\",\n        \"happy\", \"pleased\", \"wonderful\", \"amazing\"\n    ]\n}\n\nsettings = Settings()